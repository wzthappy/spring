<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation=
           "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

  <!-- 加载properties文件 -->
  <context:property-placeholder location="classpath:jdbc.properties"/>

  <!-- 配置数据源信息 -->
  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    <property name="driverClass" value="${jdbc.driver}"/>
    <property name="jdbcUrl" value="${jdbc.url}"/>
    <property name="user" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
  </bean>

  <!-- 配置MyBatis 的 SqlSessionFactory -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <!-- 加载 mybatis 核心文件 -->
    <!--    <property name="configLocation" value="classpath:mybatis-config.xml"/>-->
  </bean>

  <!-- 扫描mapper所在的包 为mapper创建实现类 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.itheima.mapper"/>
  </bean>

  <!-- 声明事务控制 -->
  <!-- 平台事务管理器 -->      <!-- 自动提交事务和 关闭事务 如果报错自动回滚 -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>
  <!-- 配置事务增强 -->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <!-- 设置事务的属性消息的 -->
    <tx:attributes>
      <!--            添加方法          隔离级别                       读写          -->
      <tx:method name="save" isolation="REPEATABLE_READ" read-only="false"/>
      <!--             查询方法                                         只读           -->
      <tx:method name="findAll" isolation="REPEATABLE_READ" read-only="true" />
      <!--         所有以update开头的                          默认读写            -->
      <tx:method name="update*" isolation="REPEATABLE_READ"/>
      <!-- 全部默认 -->
      <tx:method name="*"/>
    </tx:attributes>
  </tx:advice>
  <!-- 事务的aop织入 -->
  <aop:config>
    <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.itheima.service.impl.*.*(..))"/>
  </aop:config>



  <!--   注解扫描 -->
  <context:component-scan base-package="com.itheima">
    <!-- 排除controller的扫描 -->
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
  </context:component-scan>
</beans>